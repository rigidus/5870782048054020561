https://github.com/turtle-finance/smart-contracts/blob/master/Token.sol

23::
что значит просто "this;" в этой строке?

maxTransferAmount::734
return totalSupply().mul(maxTransferAmountRate).div(10000);
Может ли получится ноль, и может ли он быть использован где-то где он не
ожидался?

Что такое GSN meta-transactions?


771:: emit OperatorTransferred(_operator, newOperator);
772::_operator = newOperator;
Кажется логичнее было бы поменять местами?

780::require(_maxTransferAmountRate <= 10000,
Тут возможно лучше сделать через константу или переменную

https://github.com/turtle-finance/smart-contracts/blob/master/Timelock.sol


271:: // XXX: function() external payable { }
272:: receive() external payable { }
Не понимаю, что значит такая декларация внутри класса, но без
function-кейворда в начале строки?

Функция setPendingAdmin, в случае если admin_initialized=true должна быть
вызвана только из этого контракта, но ее вызовов нигде нет. Что-то
упущено?

https://github.com/turtle-finance/smart-contracts/blob/master/MasterChef.sol

880:: // Add a new lp to the pool. Can only be called by the owner.
Но в самом методе я не вижу ничего ограничивающего - вызвать может кто
угодно?

981:: in function updatePool:
turtle.mint(devaddr, turtleReward.div(12));
захардкоженная константа? то же в 984

989:: function deposit проверяет не все инварианты в if, вроде бы это не
аффектит ничего т.к. в результате получается ноль, но стоит
перепроверить, когда я лучше пойму как работает весь контракт

1024:: (function withdraw): require(user.amount >= _amount, "withdraw: not good");
Либо сравнение не в ту сторону, либо задумка в том, чтобы нельзя было
вывести все что есть?

1065-1071:: При трансферах лучше бы сначала уменьшать исходящий счет, а
потом делать трансфер?
